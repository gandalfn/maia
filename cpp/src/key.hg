/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * key.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>

_DEFS(maiamm,maia)

namespace Maia
{
    _WRAP_ENUM(class Modifier : int, MaiaModifier, s#MODIFIER_##, NO_GTYPE)
    _WRAP_ENUM(class Key, MaiaKey, s#KEY_##, s#^0$#key_0#, s#^1$#key_1#, s#^2$#key_2#, s#^3$#key_3#, s#^4$#key_4#, s#^5$#key_5#, s#^6$#key_6#, s#^7$#key_7#, s#^8$#key_8#, s#^9$#key_9#, NO_GTYPE)

    namespace Keysym
    {
        Glib::ustring key_to_string (Key inKey);
        Key key_from_string (const Glib::ustring& inKey);

        Glib::ustring modifier_to_string (Modifier inModifier);
        Modifier modifier_from_string (const Glib::ustring& inModifier);

        void get_modifiers_keys_from_string (const Glib::ustring& inValue, std::vector<Modifier>& outModifiers, std::vector<Key>& outKeys);
        Glib::ustring modifiers_keys_to_string (const std::vector<Modifier>& inModifiers, const std::vector<Key>& inKeys);
    }
}
