/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * focus-group.ccg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>

#include <maiamm/item-focusable.h>

namespace Maia
{
    FocusGroup::FocusGroup(const Glib::ustring& inId) :
        _CONSTRUCT("id", g_quark_from_string (inId.c_str ()))
    {
    }

    std::vector<Glib::RefPtr<ItemFocusable>>
    FocusGroup::get_items () const
    {
        std::vector<Glib::RefPtr<ItemFocusable>> ret;
        GList* pList = maia_focus_group_get_items (const_cast<MaiaFocusGroup*> (gobj ()));
        if (pList)
        {
            for (GList* item = pList; item; item = item->next)
            {
                ret.push_back (Glib::wrap ((MaiaItemFocusable*)item->data, true));
            }
        }

        return ret;
    }
}
