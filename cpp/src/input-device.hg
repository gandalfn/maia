/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * input-device.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>

_DEFS(maiamm,maia)
_PINCLUDE(glibmm/private/object_p.h)

namespace Maia
{
    class InputDevice : public Glib::Object
    {
        _CLASS_GOBJECT(InputDevice, MaiaInputDevice, MAIA_INPUT_DEVICE, Glib::Object, GObject)

        protected:
            _CTOR_DEFAULT()

        public:
            using RefPtr = Glib::RefPtr<InputDevice>;

            _WRAP_ENUM(class Type, MaiaInputDeviceType, s#INPUT_DEVICE_TYPE_##,  NO_GTYPE)

            _WRAP_METHOD(Glib::ustring get_name () const, maia_input_device_get_name)

            _WRAP_METHOD(InputDevice::Type get_device_type () const, maia_input_device_get_device_type)

            _WRAP_METHOD(bool get_master () const, maia_input_device_get_master)
            _WRAP_METHOD(void set_master (bool inMaster = true), maia_input_device_set_master)

            _WRAP_PROPERTY ("name", Glib::ustring)
            _WRAP_PROPERTY ("device-type", InputDevice::Type)
            _WRAP_PROPERTY ("master", bool)
    };
}
