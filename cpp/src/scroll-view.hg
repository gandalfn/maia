/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * scroll-view.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>
#include <maiamm/item.h>
#include <maiamm/adjustment.h>
#include <maiamm/graphic-region.h>
#include <maiamm/item-packable.h>

_DEFS(maiamm,maia)
_PINCLUDE(maiamm/private/item_p.h)

namespace Maia
{
    _WRAP_ENUM(ScrollViewPolicy, MaiaScrollViewPolicy, NO_GTYPE)

    /**
     * \includedoc MaiaScrollView.doc
     */
    class ScrollView : public Item, public ItemPackable
    {
        _CLASS_GOBJECT(ScrollView, MaiaScrollView, MAIA_SCROLL_VIEW, Item, MaiaItem)
        _IMPLEMENTS_INTERFACE(ItemPackable)

        protected:
            _CTOR_DEFAULT()

            explicit ScrollView(const Glib::ustring& inId);

        public:
            using RefPtr = Glib::RefPtr<ScrollView>;

            static ScrollView::RefPtr create (const Glib::ustring& inId)
            {
                MaiaScrollView* pScrollView = maia_scroll_view_new (inId.c_str ());

                return ScrollView::RefPtr (new ScrollView (pScrollView));
            }

            _WRAP_METHOD(Adjustment::RefPtr get_hadjustment () const, maia_scroll_view_get_hadjustment)
            _WRAP_METHOD(Adjustment::RefPtr get_vadjustment () const, maia_scroll_view_get_vadjustment)
            _WRAP_METHOD(double get_scroll_x () const, maia_scroll_view_get_scroll_x)
            _WRAP_METHOD(void set_scroll_x (double inValue), maia_scroll_view_set_scroll_x)
            _WRAP_METHOD(double get_scroll_y () const, maia_scroll_view_get_scroll_y)
            _WRAP_METHOD(void set_scroll_y (double inValue), maia_scroll_view_set_scroll_y)
            _WRAP_METHOD(ScrollViewPolicy get_policy () const, maia_scroll_view_get_policy)
            _WRAP_METHOD(void set_policy (ScrollViewPolicy inPolicy), maia_scroll_view_set_policy)
            _WRAP_METHOD(Graphic::Region::RefPtr get_visible_area (const Item::RefPtr& inItem) const, maia_scroll_view_get_visible_area)
    };
}
