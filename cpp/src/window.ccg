/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * window.ccg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>
#include <maiamm/popup.h>
#include <maiamm/core-list.h>

namespace Maia
{
    Window::Window(const Glib::ustring& inId) :
        _CONSTRUCT("id", g_quark_from_string (inId.c_str ()))
    {
    }

    std::vector<Glib::RefPtr<InputDevice>>
    Window::input_devices () const
    {
        std::vector<Glib::RefPtr<InputDevice>> ret;

        MaiaCoreList* pList = maia_window_get_input_devices (const_cast<MaiaWindow*> (gobj ()));
        if (pList)
        {
            MaiaCoreIterator* iter = maia_core_collection_iterator ((MaiaCoreCollection*)pList);
            while (maia_core_iterator_next (iter))
            {
                MaiaInputDevice* device = (MaiaInputDevice*)maia_core_iterator_get (iter);
                ret.push_back (Glib::wrap (device, true));
            }
            maia_core_iterator_unref (iter);
            maia_core_collection_unref ((MaiaCoreCollection*)pList);
        }

        return ret;
    }

    void
    Window::set_input_devices (const std::vector<Glib::RefPtr<InputDevice>>& inDevices)
    {
        MaiaCoreList* pList = maia_core_list_new (MAIA_TYPE_INPUT_DEVICE, NULL, NULL);
        for (auto device : inDevices)
        {
            maia_core_collection_insert ((MaiaCoreCollection*)pList, device->gobj ());
        }

        maia_window_set_input_devices (gobj (), pList);
        maia_core_collection_unref ((MaiaCoreCollection*)pList);
    }
}
