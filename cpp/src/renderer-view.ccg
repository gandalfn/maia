/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * renderer-view.ccg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>

#include <maiamm/graphic-renderer.h>

namespace Maia
{
    RendererView::RendererView(const Glib::ustring& inId) :
        _CONSTRUCT("id", g_quark_from_string (inId.c_str ()))
    {
    }

    Glib::RefPtr<Graphic::Renderer>
    RendererView::get_renderer ()
    {
        MaiaGraphicRenderer* pRenderer = maia_renderer_view_get_renderer (gobj ());

        if (m_pRenderer && m_pRenderer->get_renderer ()->gobj () != pRenderer)
        {
            if (pRenderer)
            {
                Glib::RefPtr<Graphic::RendererObject> pRendererObject = Glib::wrap (pRenderer, true);
                m_pRenderer = Graphic::Renderer::create (pRendererObject);
            }
            else
            {
                m_pRenderer.reset ();
            }
        }

        return m_pRenderer;
    }

    void
    RendererView::set_renderer (const Glib::RefPtr<Graphic::Renderer>& inpRenderer)
    {
        if (m_pRenderer != inpRenderer)
        {
            m_pRenderer = inpRenderer;
            if (m_pRenderer)
            {
                maia_renderer_view_set_renderer (gobj(), inpRenderer->get_renderer ()->gobj ());
            }
            else
            {
                maia_renderer_view_set_renderer (gobj(), 0);
            }
        }
    }
}
