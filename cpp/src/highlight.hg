/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * highlight.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>
#include <maiamm/toggle.h>
#include <maiamm/graphic-glyph.h>

_DEFS(maiamm,maia)
_PINCLUDE(maiamm/private/toggle_p.h)

namespace Maia
{
    class Highlight : public Toggle
    {
        _CLASS_GOBJECT(Highlight, MaiaHighlight, MAIA_HIGHLIGHT, Toggle, MaiaToggle)

        protected:
            _CTOR_DEFAULT()

            explicit Highlight(const Glib::ustring& inId);

        public:
            static Glib::RefPtr<Highlight> create (const Glib::ustring& inId, const Glib::ustring& inLabel)
            {
                MaiaHighlight* pButton = maia_highlight_new (inId.c_str(), inLabel.c_str ());
                return Glib::RefPtr<Highlight> (new Highlight (pButton));
            }

            _WRAP_METHOD(Graphic::Glyph::Alignment get_alignment () const, maia_highlight_get_alignment)
            _WRAP_METHOD(void set_alignment (Graphic::Glyph::Alignment inAlignment), maia_highlight_set_alignment)

            _WRAP_PROPERTY("alignment", Graphic::Glyph::Alignment)
            _WRAP_PROPERTY("tag", Glib::ustring)

        private:
            _WRAP_PROPERTY("highlight-progress", double)
    };
}
