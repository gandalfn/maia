/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * item-focusable.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>

_DEFS(maiamm,maia)
_PINCLUDE(glibmm/private/object_p.h)

namespace Maia
{
    class FocusGroup;

    class ItemFocusable : public Glib::Interface
    {
        _CLASS_INTERFACE(ItemFocusable, MaiaItemFocusable, MAIA_ITEM_FOCUSABLE, MaiaItemFocusableIface)

        protected:
            _WRAP_VFUNC(bool can_focus () const, get_can_focus)
            _WRAP_VFUNC(void set_can_focus (bool inCanFocus = true), set_can_focus)

            _WRAP_VFUNC(bool have_focus () const, get_have_focus)
            _WRAP_VFUNC(void set_have_focus (bool inHaveFocus = true), set_have_focus)

            _WRAP_VFUNC(int get_focus_order () const, get_focus_order)
            _WRAP_VFUNC(void set_focus_order (int inFocusOrder), set_focus_order)

#m4 _CONVERSION(`MaiaItem*', `const Glib::RefPtr<FocusGroup>&', `Glib::wrap($3, true)')
            _WRAP_VFUNC(Glib::RefPtr<FocusGroup> get_focus_group () const, get_focus_group)
            _WRAP_VFUNC(void set_focus_group (const Glib::RefPtr<FocusGroup>& inFocusGroup) const, set_focus_group)
#m4 _CONVERSION(`MaiaItem*', `const Glib::RefPtr<FocusGroup>&', `Glib::wrap($3)')

        public:
            using RefPtr = Glib::RefPtr<ItemFocusable>;

            _WRAP_METHOD(bool can_focus () const, maia_item_focusable_get_can_focus)
            _WRAP_METHOD(void set_can_focus (bool inCanFocus = true), maia_item_focusable_set_can_focus)

            _WRAP_METHOD(bool have_focus () const, maia_item_focusable_get_have_focus)
            _WRAP_METHOD(void set_have_focus (bool inFocus = true), maia_item_focusable_set_have_focus)

            _WRAP_METHOD(int get_focus_order () const, maia_item_focusable_get_focus_order)
            _WRAP_METHOD(void set_focus_order (int inFocusOrder), maia_item_focusable_set_focus_order)

            _WRAP_METHOD(Glib::RefPtr<FocusGroup> get_focus_group () const, maia_item_focusable_get_focus_group, refreturn)
            _WRAP_METHOD(void set_focus_group (const Glib::RefPtr<FocusGroup>& inFocusGroup) const, maia_item_focusable_set_focus_group)

            _WRAP_PROPERTY("can-focus", bool)
            _WRAP_PROPERTY("have-focus", bool)
            _WRAP_PROPERTY("focus-order", int)
            _WRAP_PROPERTY("focus-group", Glib::RefPtr<FocusGroup>)
    };
}
