/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * core-serializable.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>

#include <maiamm/core-object.h>

_DEFS(maiamm,maia)
_PINCLUDE(glibmm/private/object_p.h)

namespace Maia
{
    namespace Core
    {
        _GMMPROC_EXTRA_NAMESPACE(Core)

        class Serializable : public Glib::Interface
        {
            _CLASS_INTERFACE(Serializable, MaiaCoreSerializable, MAIA_CORE_SERIALIZABLE, MaiaCoreSerializableIface)

            protected:
#m4 _CONVERSION(`Glib::VariantBase',`GVariant*',`g_variant_ref (($3).gobj())')
#m4 _CONVERSION(`GVariant*',`const Glib::VariantBase&',`Glib::wrap($3, true)')
                _WRAP_VFUNC(Glib::VariantBase serialize (), get_serialize)
                _WRAP_VFUNC(void unserialize (const Glib::VariantBase& inData), set_serialize, custom_vfunc_callback)

            public:
                _WRAP_METHOD(Glib::VariantBase serialize (), maia_core_serializable_get_serialize)
                _WRAP_METHOD(void unserialize (const Glib::VariantBase& inData), maia_core_serializable_set_serialize)

            private:
                _WRAP_PROPERTY("serialize", Glib::VariantBase)
        };
    }
}
