/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * core-parser.ccg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>

namespace Maia
{
    namespace Core
    {
        std::map<Glib::ustring, Glib::ustring> Parser::get_attributes ()
        {
            std::map<Glib::ustring, Glib::ustring> ret;
            MaiaCoreMap* pAttributes = maia_core_parser_get_attributes (gobj ());

            if (pAttributes)
            {
                MaiaCoreIterator* pIter = maia_core_collection_iterator (MAIA_CORE_COLLECTION (gobj ()));
                if (pIter)
                {
                    while (maia_core_iterator_next (pIter))
                    {
                        MaiaCorePair* pPair = (MaiaCorePair*)maia_core_iterator_get (pIter);

                        if (pPair)
                        {
                            Glib::ustring first((char*)maia_core_pair_get_first (pPair));
                            Glib::ustring second((char*)maia_core_pair_get_second (pPair));

                            ret.insert (std::make_pair (first, second));
                        }
                    }
                    maia_core_iterator_unref (pIter);
                }
            }

            return ret;
        }
    }
}
