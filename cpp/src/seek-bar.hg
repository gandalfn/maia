/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * seek-bar.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>
#include <maiamm/progress-bar.h>
#include <maiamm/item-focusable.h>

_DEFS(maiamm,maia)
_PINCLUDE(maiamm/private/progress-bar_p.h)

namespace Maia
{
    class SeekBar : public ProgressBar, public ItemFocusable
    {
        _CLASS_GOBJECT(SeekBar, MaiaSeekBar, MAIA_SEEK_BAR, ProgressBar, MaiaProgressBar)
        _IMPLEMENTS_INTERFACE(ItemFocusable)

        protected:
            _CTOR_DEFAULT()

            explicit SeekBar(const Glib::ustring& inId);

        public:
            static Glib::RefPtr<SeekBar> create (const Glib::ustring& inId)
            {
                MaiaSeekBar* pSeekBar = maia_seek_bar_new (inId.c_str ());

                return Glib::RefPtr<SeekBar> (new SeekBar (pSeekBar));
            }

            _IGNORE_PROPERTY("can-focus")
            _IGNORE_PROPERTY("have-focus")
            _IGNORE_PROPERTY("focus-order")
            _IGNORE_PROPERTY("focus-group")
    };
}
