/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * togglegroup.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>
#include <maiamm/core-object.h>
#include <maiamm/manifest-element.h>
#include <maiamm/togglebutton.h>

_DEFS(maiamm,maia)
_PINCLUDE(maiamm/private/core-object_p.h)

namespace Maia
{
    class ToggleGroup : public Core::Object, public Manifest::Element
    {
        _CLASS_GOBJECT(ToggleGroup, MaiaToggleGroup, MAIA_TOGGLE_GROUP, Core::Object, MaiaCoreObject)
        _IMPLEMENTS_INTERFACE(Manifest::Element)

        protected:
            _CTOR_DEFAULT()

        public:
            static Glib::RefPtr<ToggleGroup> create ()
            {
                return Glib::RefPtr<ToggleGroup> (new ToggleGroup ());
            }

            _WRAP_METHOD(void add_button (const Glib::RefPtr<ToggleButton>& inButtton), maia_toggle_group_add_button)
            _WRAP_METHOD(void remove_button (const Glib::RefPtr<ToggleButton>& inButtton), maia_toggle_group_remove_button)

            _WRAP_METHOD(Glib::ustring get_name () const, maia_toggle_group_get_name)
            _WRAP_METHOD(Glib::ustring get_active () const, maia_toggle_group_get_active)
            _WRAP_METHOD(void set_active (const Glib::ustring& inName), maia_toggle_group_set_active)

            _WRAP_PROPERTY("name", Glib::ustring)
            _WRAP_PROPERTY("active", Glib::ustring)

            _WRAP_PROPERTY("tag", Glib::ustring)
            _WRAP_PROPERTY("characters", Glib::ustring)
    };
}
