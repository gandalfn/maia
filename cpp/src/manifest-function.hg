/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * manifest-function.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>
#include <maiamm/manifest-attribute.h>

_DEFS(maiamm,maia)
_PINCLUDE(maiamm/private/manifest-attribute_p.h)

namespace Maia
{
    namespace Manifest
    {
        _GMMPROC_EXTRA_NAMESPACE(Manifest)

        class Function : public Attribute
        {
            _CLASS_GOBJECT(Function, MaiaManifestFunction, MAIA_MANIFEST_FUNCTION, Attribute, MaiaManifestAttribute)

            public:
                using RefPtr = Glib::RefPtr<Function>;
                using SlotTransformFunc = sigc::slot<void, Function::RefPtr, Glib::ValueBase&>;

                _IGNORE(maia_manifest_function_register_transform_func)
                static void register_transform_func (GType inType, const Glib::ustring& inName, SlotTransformFunc inFunc);
        };
    }
}
