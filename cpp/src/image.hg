/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * image.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>
#include <maiamm/item-packable.h>
#include <maiamm/item-movable.h>
#include <maiamm/item-resizable.h>
#include <maiamm/item.h>

_DEFS(maiamm,maia)
_PINCLUDE(maiamm/private/item_p.h)

namespace Maia
{
    class Image : public Item, public ItemPackable, public ItemMovable, public ItemResizable
    {
        _CLASS_GOBJECT(Image, MaiaImage, MAIA_IMAGE, Item, MaiaItem)
        _IMPLEMENTS_INTERFACE(ItemPackable)
        _IMPLEMENTS_INTERFACE(ItemMovable)
        _IMPLEMENTS_INTERFACE(ItemResizable)

        protected:
            _CTOR_DEFAULT()

        public:
            static Glib::RefPtr<Image> create (const Glib::ustring& inId, const Glib::ustring& inFilename)
            {
                MaiaImage* pImage = maia_image_new (inId.c_str (), inFilename.c_str ());

                return Glib::RefPtr<Image> (new Image (pImage));
            }

            _WRAP_METHOD(Glib::ustring get_filename () const, maia_image_get_filename)
            _WRAP_METHOD(void set_filename (const Glib::ustring& inFilename), maia_image_set_filename)
            inline void unset_filename ()
            {
                maia_image_set_filename (gobj(), 0);
            }

            _IGNORE(maia_image_create_image)

            _WRAP_PROPERTY("filename", Glib::ustring)

            _WRAP_PROPERTY("row", guint)
            _WRAP_PROPERTY("rows", guint)

            _WRAP_PROPERTY("column", guint)
            _WRAP_PROPERTY("columns", guint)

            _WRAP_PROPERTY("xexpand", bool)
            _WRAP_PROPERTY("xfill", bool)
            _WRAP_PROPERTY("xshrink", bool)
            _WRAP_PROPERTY("xalign", double)

            _WRAP_PROPERTY("yexpand", bool)
            _WRAP_PROPERTY("yfill", bool)
            _WRAP_PROPERTY("yshrink", bool)
            _WRAP_PROPERTY("yalign", double)

            _WRAP_PROPERTY("top-padding", double)
            _WRAP_PROPERTY("bottom-padding", double)
            _WRAP_PROPERTY("left-padding", double)
            _WRAP_PROPERTY("right-padding", double)
    };
}
