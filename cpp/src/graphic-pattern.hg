/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * graphic-pattern.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <maia.h>
#include <maiamm/graphic-transform.h>

_DEFS(maiamm,maia)
_PINCLUDE(maiamm/private/core-object_p.h)

namespace Maia
{
    namespace Graphic
    {
        _GMMPROC_EXTRA_NAMESPACE(Graphic)

        typedef Glib::RefPtr<class Pattern> PatternRefPtr;

        class Pattern : public Core::Object
        {
            _CLASS_GOBJECT(Pattern, MaiaGraphicPattern, MAIA_GRAPHIC_PATTERN, Core::Object, MaiaCoreObject)

            _WRAP_METHOD(TransformRefPtr get_transform () const, maia_graphic_pattern_get_transform, refreturn)
            _WRAP_METHOD(void set_transform (const TransformRefPtr& inTransform) const, maia_graphic_pattern_set_transform)

#ifndef DOXYGEN_SHOULD_SKIP_THIS
            _WRAP_PROPERTY ("transform", TransformRefPtr)
#endif
        };

    }
}
