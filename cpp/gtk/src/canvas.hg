/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
/*
 * canvas.hg
 * Copyright (C) Nicolas Bruguier 2010-2013 <gandalfn@club-internet.fr>
 *
 * maia is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * maia is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <gtkmm.h>

#include <maia-gtk.h>
#include <maiamm/canvas.h>
#include <maiamm/drawable.h>
#include <maiamm/graphic-surface.h>
#include <maia-gtkmm/canvas.h>

_DEFS(maia-gtkmm,maia-gtk)
_PINCLUDE(gtkmm/private/widget_p.h)

namespace Maia
{
    namespace Gtk
    {
        class Canvas : public ::Gtk::Widget, public Maia::Drawable, public Maia::Canvas
        {
            _CLASS_GTKOBJECT(Canvas, MaiaGtkCanvas, MAIA_GTK_CANVAS, ::Gtk::Widget, GtkWidget)
            _IMPLEMENTS_INTERFACE(Maia::Drawable)
            _IMPLEMENTS_INTERFACE(Maia::Canvas)

            public:
                _CTOR_DEFAULT

                _WRAP_METHOD(Glib::ListHandle< ::Gtk::Button* > get_shortcut_buttons (), maia_gtk_canvas_get_shortcut_buttons)

                _WRAP_PROPERTY("root", Glib::RefPtr<Item>)
                _WRAP_PROPERTY("surface", Glib::RefPtr<Graphic::Surface>)
                _WRAP_PROPERTY("scroll_x", double)
                _WRAP_PROPERTY("scroll_y", double)
                _WRAP_PROPERTY("damaged", Glib::RefPtr<Graphic::Region>)
                _WRAP_PROPERTY("geometry", Glib::RefPtr<Graphic::Region>)
                _WRAP_PROPERTY("transform", Glib::RefPtr<Graphic::Transform>)
                _WRAP_PROPERTY("focus-item", Glib::RefPtr<Item>)
                _WRAP_PROPERTY("grab-pointer-item", Glib::RefPtr<Item>)
                _WRAP_PROPERTY("grab-keyboard-item", Glib::RefPtr<Item>)

            private:
                _WRAP_SIGNAL(void on_set_scroll_adjustments (::Gtk::Adjustment* inpHAdjust, ::Gtk::Adjustment* inpVAdjust), "on-set-scroll-adjustments", no_default_handler)
        };

        Glib::RefPtr<Graphic::Surface> create_surface (const Glib::RefPtr<Gdk::Drawable>& inpDrawable, unsigned int inWidth, unsigned int inHeight);
        Glib::RefPtr<Graphic::Surface> create_surface (const ::Gtk::Widget& inWidget);
    }
}
